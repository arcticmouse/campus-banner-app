{"version":3,"sources":["actions/markersAction.js","components/markers.js","actions/eventsAction.js","components/datePicker.js","components/map.js","components/selected.js","actions/formAction.js","components/form.js","components/formInfo.js","reducers/markersReducer.js","reducers/eventsReducer.js","reducers/formReducer.js","reducers/rootReducer.js","App.js","serviceWorker.js","index.js"],"names":["url","process","parseIt","str","indexOf","geo","parseDMS","fetchMarkers","dispatch","fetchMarkersBegin","Promise","resolve","reject","request","get","accept","end","err","resp","markers","body","valueRanges","values","forEach","marker","index","latitude","longitude","push","id","name","lat","lng","num","img","icon","sel","avail","then","json","fetchMarkersSuccess","catch","error","fetchMarkersFailure","FETCH_MARKERS_BEGIN","FETCH_MARKERS_SUCCESS","FETCH_MARKERS_FAILURE","type","payload","TOGGLE_SELECTED_MARKER","SET_MARKER_ICON","toggleSelect","data","setMarker","new_icon","SET_AVAILABLE_MARKER","MarkerList","onMarkerSelect","m","props","slice","data2","this","loading","message","className","multiple","map","i","key","onClick","React","Component","connect","state","items","fetchEvents","fetchEventsBegin","events","today","moment","format","JSON","parse","text","event","date","dateTime","start","title","summary","location","fetchEventsSuccess","fetchEventsFailure","FETCH_EVENTS_BEGIN","FETCH_EVENTS_SUCCESS","FETCH_EVENTS_FAILURE","SET_START_DATE","SET_END_DATE","extendMoment","Moment","locale","earliestdate","Date","setDate","getDate","what_earliest_day","getDay","earliestenddate","lastdate","what_last_day","DateRange","onStartSelect","start_date","setStartDate","end_date","setEndDate","onEndSelect","arr","choosen_range","range","includes","overlaps","avail_markers","marker_item","setAvailableMarker","selected","selectsStart","startDate","onChange","minDate","maxDate","dateFormat","selectsEnd","endDate","CampusBannersMap","compose","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","latLngBounds","north","south","west","east","bind","position","parseFloat","Map","googleMapURL","loadingElement","style","height","containerElement","width","mapElement","src","alt","selected_marker","SelectedMarker","pole_img","avail_dates","SET_NAME","SET_EMAIL","SET_DEPARTMENT","SET_ALT_NAME","SET_ALT_EMAIL","SET_ERROR","SET_RECAPTCHA","postForm","rsvp","fetch","method","mode","stringify","headers","console","log","postFormSuccess","postFormFailure","POST_FORM_SUCCESS","POST_FORM_FAILURE","response","BannerForm","submitted","_","success","recap","value","setRecaptcha","onNameBlur","e","target","length","nameErr","setState","setName","onEmailBlur","toLowerCase","emailErr","setEmail","onDeptBlur","deptErr","setDepartment","onAltNameBlur","altNameErr","setAltName","onAltEmailBlur","altEmailErr","setAltEmail","onNoShowBlur","noShow","handleSubmit","preventDefault","q","Object","entries","email","department","alt_name","alt_email","e_start","e_end","recaptcha","formErr","sel_list","onSubmit","size","class","onBlur","aria-hidden","sitekey","form","dept","setError","FormInfo","initialState","undefined","combineReducers","action","update","$set","store","createStore","rootReducer","applyMiddleware","thunk","App","aria-label","Boolean","window","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdb92539.chunk.js","sourcesContent":["import request from 'superagent'\nimport geo from 'mt-geo'\nlet url = `https://sheets.googleapis.com/v4/spreadsheets/${process.env.REACT_APP_SHEET_ID}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${process.env.REACT_APP_SHEET_API_KEY}`\n\n\n\nfunction parseIt(str){\n    if(str.indexOf('.') == 2 || str.indexOf('-') == 0) return str\n    return geo.parseDMS(str);\n}\n\n\nfunction getMarkers() {\n    return new Promise(function(resolve, reject){\n        request\n        .get(url)\n        .accept('json')\n        .end((err, resp) => {\n            if (!err) {\n                const markers = []\n                resp.body.valueRanges[0].values.forEach((marker, index) => {\n                    if (index < 1) return\n                    let latitude = parseIt(marker[0])\n                    let longitude = parseIt(marker[1])\n                    markers.push({\n                        id: index - 1,\n                        name: marker[2],\n                        lat: latitude,\n                        lng: longitude,\n                        num: marker[3],\n                        img: marker[5],\n                        icon: 'https://maps.google.com/mapfiles/ms/icons/blue.png',\n                        sel: false,\n                        avail: true\n                    })\n                })\n                resolve(markers)\n            } else reject(err)\n        })\n    })\n}\n   \nexport function fetchMarkers() {\n    return dispatch => {\n        dispatch(fetchMarkersBegin());\n        return getMarkers()\n        .then(json => {\n            dispatch(fetchMarkersSuccess(json));\n            return json;\n        })\n        .catch(error =>\n            dispatch(fetchMarkersFailure(error))\n        )\n    }\n}\n\nexport const FETCH_MARKERS_BEGIN = \"FETCH_MARKERS_BEGIN\";\nexport const FETCH_MARKERS_SUCCESS = \"FETCH_MARKERS_SUCCESS\";\nexport const FETCH_MARKERS_FAILURE = \"FETCH_MARKERS_FAILURE\";\n\nexport const fetchMarkersBegin = () => ({\n    type: FETCH_MARKERS_BEGIN\n})\n\nexport const fetchMarkersSuccess = markers => ({\n    type: FETCH_MARKERS_SUCCESS,\n    payload: { markers }\n})\n\nexport const fetchMarkersFailure = error => ({\n    type: FETCH_MARKERS_FAILURE,\n    payload: { error }\n})\n\n\n\nexport const TOGGLE_SELECTED_MARKER = \"TOGGLE_SELECTED_MARKER\";\nexport const SET_MARKER_ICON = \"SET_MARKER_ICON\";\n\nexport const toggleSelect = data => ({\n    type: TOGGLE_SELECTED_MARKER,\n    data\n})\n\nexport const setMarker = new_icon => ({\n    type: SET_MARKER_ICON,\n    new_icon\n})\n\n\n\n\nexport const SET_AVAILABLE_MARKER = \"SET_AVAILABLE_MARKER\"\n\nexport const setAvailableMarker = marker_item => ({\n    type: SET_AVAILABLE_MARKER,\n    marker_item\n})","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { fetchMarkers, toggleSelect, setMarker } from \"./../actions/markersAction\"\n\n\n\nclass MarkerList extends React.Component {\n  componentDidMount() {\n    this.props.fetchMarkers();\n  }\n\n  onMarkerSelect = (m) => {\n    let data = [m.id, (m.sel === false) ? true : false]\n    this.props.toggleSelect(data)\n    \n    let marker = m\n    if(marker.icon.indexOf('-dot') == -1) { //if does not have dot\n        marker.icon = marker.icon.slice(0, -4) + '-dot' + marker.icon.slice(-4)\n    } else {\n        marker.icon = marker.icon.slice(0, -8) + marker.icon.slice(-4)\n    }\n    let data2 = [marker.id, marker.icon]\n    this.props.setMarker(data2)\n  }  \n\n  render() {\n    const { error, loading, markers } = this.props;\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"banner-list\">\n        <h3>Click on a banner name on the list below to select a banner.</h3>\n        <h3>Banners</h3>\n        <p>listed numerically by secondary number, e.g. the '10' in 115/10 - Eshleman Rd / Barrow Ln</p>\n        <select multiple>\n          {markers.map((marker, i) => {\n              if(marker.avail) return (\n                <option \n                key={i} \n                onClick={() => this.onMarkerSelect(marker)} \n                className={(marker.sel === false) ? 'unselected' : 'selected'}>{marker.num} - {marker.name}\n              </option>\n              )\n            }\n          )}\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  markers: state.markers.items,\n  loading: state.markers.loading,\n  error: state.markers.error\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchMarkers: () => dispatch(fetchMarkers()),\n    toggleSelect: (data) => dispatch(toggleSelect(data)),\n    setMarker: (data) => dispatch(setMarker(data))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MarkerList);","import request from 'superagent'\nimport moment from 'moment'\nimport { extendMoment } from 'moment-range'\n\nlet url = `https://www.googleapis.com/calendar/v3/calendars/${process.env.REACT_APP_CALENDAR_ID}/events?key=${process.env.REACT_APP_CALENDAR_API_KEY}`\n\nfunction getEvents() {\n    return new Promise(function(resolve, reject){\n        request\n        .get(url)\n        .accept('json')\n        .end((err, resp) => {\n            if (!err) {\n                let events = []\n                let today = moment().format('YYYY-MM-DD')\n                JSON.parse(resp.text).items.forEach((event) => {\n                    if(today < event.end.date || today < event.end.dateTime) {\n                        events.push({\n                        start: event.start.date || event.start.dateTime,\n                        end: event.end.date || event.end.dateTime,\n                        title: event.summary,\n                        location: event.location\n                        })\n                    }//if event not in past\n                })\n                resolve(events)\n            } else reject(err)\n        })\n    })\n}\n  \nexport function fetchEvents() {\n    return dispatch => {\n        dispatch(fetchEventsBegin());\n        return getEvents()\n        .then(json => {\n            dispatch(fetchEventsSuccess(json));\n            return json;\n        })\n        .catch(error =>\n            dispatch(fetchEventsFailure(error))\n        )\n    }\n}\n\nexport const FETCH_EVENTS_BEGIN = \"FETCH_EVENTS_BEGIN\";\nexport const FETCH_EVENTS_SUCCESS = \"FETCH_EVENTS_SUCCESS\";\nexport const FETCH_EVENTS_FAILURE = \"FETCH_EVENTS_FAILURE\";\n\nexport const fetchEventsBegin = () => ({\n    type: FETCH_EVENTS_BEGIN\n})\n\nexport const fetchEventsSuccess = events => ({\n    type: FETCH_EVENTS_SUCCESS,\n    payload: { events }\n})\n\nexport const fetchEventsFailure = error => ({\n    type: FETCH_EVENTS_FAILURE,\n    payload: { error }\n})\n\n\n\nexport const SET_START_DATE = \"SET_START_DATE\"\nexport const SET_END_DATE = \"SET_END_DATE\"\n\nexport const setStartDate = start_date => ({\n    type: SET_START_DATE,\n    start_date\n})\n\nexport const setEndDate = end_date => ({\n    type: SET_END_DATE,\n    end_date\n})","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport DatePicker from 'react-datepicker'\nimport Moment from 'moment'\nimport MomentRange,{ extendMoment } from 'moment-range'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { fetchEvents, setStartDate, setEndDate } from \"./../actions/eventsAction\";\nimport { setAvailableMarker, setMarker } from \"./../actions/markersAction\";\n\n\n\nconst moment = extendMoment(Moment)\nmoment.locale('en_US')\n\n\nconst earliestdate = new Date()\n      earliestdate.setDate(earliestdate.getDate() + 14)\n      let what_earliest_day = earliestdate.getDay() //to check for the weekend\n      if(what_earliest_day === 0) {\n        earliestdate.setDate(earliestdate.getDate() + 1)\n      } else if(what_earliest_day === 6) {\n        earliestdate.setDate(earliestdate.getDate() + 2)\n      }\nconst earliestenddate = new Date(earliestdate)\n      earliestenddate.setDate(earliestenddate.getDate() + 1)\nconst lastdate = new Date()\n      lastdate.setDate(earliestdate.getDate() + 366)\n      let what_last_day = lastdate.getDay() //to check for weekend\n      if(what_last_day === 0) {\n        lastdate.setDate(lastdate.getDate() + 1)\n      } else if(what_last_day === 6) {\n        lastdate.setDate(lastdate.getDate() + 2)\n      }\n\nclass DateRange extends Component {\n\n    componentDidMount(){\n        this.props.fetchEvents()\n        this.props.setStartDate(earliestdate)\n        this.props.setEndDate(earliestenddate)\n    }\n\n    onStartSelect = (start_date) => {\n        this.props.setStartDate(start_date)\n        \n        let end_date = new Date(start_date)\n        end_date.setDate(end_date.getDate() + 1)\n\n        this.props.setEndDate(end_date)\n    }\n\n    onEndSelect = (end_date) => {\n        this.props.setEndDate(end_date)\n\n        let arr = []\n        let choosen_range = moment.range(this.props.start, this.props.end)\n        this.props.events.forEach((event) => {         \n          let range = moment.range(event.start, event.end)\n          if(!arr.includes(event.location)){ \n            if(range.overlaps(choosen_range)){\n              arr.push(event.location)\n            } \n          } \n        }) \n\n        let avail_markers = []\n        this.props.markers.forEach((marker) => {\n          let i = arr.indexOf(marker.num)\n          if(i !== -1){\n            if(marker.icon.indexOf('orange') == -1) {\n              if(marker.icon.indexOf('dot') != -1) {\n                this.props.setMarker([marker.id, 'https://maps.google.com/mapfiles/ms/icons/orange-dot.png'])\n              } else this.props.setMarker([marker.id, 'https://maps.google.com/mapfiles/ms/icons/orange.png'])\n            }\n            if(marker.avail != false) avail_markers.push([marker.id, false])\n          } else {\n            if(marker.icon.indexOf('green') == -1) {\n              if(marker.icon.indexOf('dot') != -1) {\n                this.props.setMarker([marker.id, 'https://maps.google.com/mapfiles/ms/icons/green-dot.png'])\n              } else this.props.setMarker([marker.id, 'https://maps.google.com/mapfiles/ms/icons/green.png'])\n            }\n            if(marker.avail != true) avail_markers.push([marker.id, true])\n          }\n        })\n\n        avail_markers.forEach((marker_item) => { this.props.setAvailableMarker(marker_item) })\n    }\n\n    render(){\n        const { error, loading, start, end } = this.props;\n\n        if (error) {\n          return <div>Error! {error.message}</div>;\n        }\n    \n        if (loading) {\n          return <div>Loading...</div>;\n        }\n\n        return (\n            <div className=\"date-range\">\n                <h3>1. Click on the date boxes below to select the start and end date for your banner reservation</h3>\n                <div className=\"start\">\n                    <strong>Start Date</strong>\n                    <DatePicker\n                        selected={start}\n                        selectsStart\n                        startDate={start}\n                        //endDate={end}\n                        onChange={this.onStartSelect}\n                        minDate={start}\n                        maxDate={lastdate}\n                        dateFormat=\"MM/dd/yyyy\"\n                    />\n                </div>\n                <div className=\"end\">\n                    <strong>End Date</strong>\n                    <DatePicker\n                        selected={end}\n                        selectsEnd\n                        //startDate={start}\n                        endDate={end}\n                        onChange={this.onEndSelect}\n                        minDate={end}\n                        maxDate={lastdate}\n                        dateFormat=\"MM/dd/yyyy\"\n                    />\n                </div>\n            </div> \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    events: state.events.items,\n    start: state.events.start,\n    end: state.events.end,\n    loading: state.events.loading,\n    error: state.events.error,\n\n    markers: state.markers.items,\n})\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      fetchEvents: () => dispatch(fetchEvents()),\n      setStartDate: (start_date) => dispatch(setStartDate(start_date)),\n      setEndDate: (end_date) => dispatch(setEndDate(end_date)),\n\n      setAvailableMarker: (marker_item) => dispatch(setAvailableMarker(marker_item)),\n      setMarker: (data) => dispatch(setMarker(data))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateRange)","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { compose } from 'recompose'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\nimport PropTypes from 'prop-types'\n\nimport { toggleSelect, setMarker } from \"./../actions/markersAction\";\n\n\nconst orange_marker = 'https://maps.google.com/mapfiles/ms/icons/orange.png'\nconst green_marker = 'https://maps.google.com/mapfiles/ms/icons/green.png'\nconst blue_marker = 'https://maps.google.com/mapfiles/ms/icons/blue.png'\n\nconst CampusBannersMap = compose(\n    withScriptjs, \n    withGoogleMap\n    )(props => {\n      return (\n        <GoogleMap defaultZoom={17} defaultCenter={{lat:37.87215, lng:-122.257812}}  latLngBounds={{north: -122.262866, south: -122.258798, west: 37.870773, east: 37.870760}} >\n            {props.markers.map(marker => {\n                const onClick = props.onClick.bind(this, marker)\n                return (\n                    <Marker \n                    key={marker.id}\n                    position={{lat:parseFloat(marker.lat, 10), lng:parseFloat(marker.lng, 10)}} \n                    onClick={onClick}\n                    icon={marker.icon}\n                    >\n                    </Marker>\n                )\n            })}\n        </GoogleMap>\n      )\n    } \n)   \n\n\n\nclass Map extends Component {\n    onMarkerSelect = (m) => {\n        let data = [m.id, (m.sel === false) ? true : false]\n        this.props.toggleSelect(data)\n        \n\n        let marker = m\n        if(marker.icon.indexOf('-dot') == -1) { //if does not have dot\n            marker.icon = marker.icon.slice(0, -4) + '-dot' + marker.icon.slice(-4)\n        } else {\n            marker.icon = marker.icon.slice(0, -8) + marker.icon.slice(-4)\n        }\n        let data2 = [marker.id, marker.icon]\n        this.props.setMarker(data2)\n    } \n\n    render() {\n        const { error, loading, markers } = this.props\n\n        if (error) {\n            return <div>Error! {error.message}</div>\n          }\n      \n        if (loading) {\n        return <div>Loading...</div>\n        }\n\n        return(\n         <div className=\"campus-map\">\n         <h3>2. Click on a marker to select a banner. This is a Google map and you are able to use normal Google map functionality. Be sure to check out the street view!</h3>\n          <CampusBannersMap\n           googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBeNjH2b1nQ7b7TGQz-KWE5OrrZLNCrZy8&v=4.exp&libraries=geometry,drawing,places\"\n           loadingElement={<div style={{height: `100%`}} />}\n           containerElement={<div style={{height: `100%`, width: '100%'}} />}\n           mapElement={<div style={{height: `100%`}} />}\n           markers={markers}\n           onClick={this.onMarkerSelect}\n          />\n          <div className=\"map-key\">\n            <ul>\n                <li><img src=\"https://maps.google.com/mapfiles/ms/icons/blue.png\" alt=\"blue marker icon\"/><label>Banner Location</label></li>\n                <li><img src=\"https://maps.google.com/mapfiles/ms/icons/green.png\" alt=\"green marker icon\"/><label>Banner Available During Chosen Date Range</label></li>\n                <li><img src=\"https://maps.google.com/mapfiles/ms/icons/orange.png\" alt=\"orange marker icon\"/><label>Banner Un-Available During Chosen Date Range</label></li>\n            </ul>\n            <ul>\n                <li><img src=\"https://maps.google.com/mapfiles/ms/icons/blue-dot.png\" alt=\"blue marker icon with dot\"/><label>Selected Banner</label></li>\n                <li><img src=\"https://maps.google.com/mapfiles/ms/icons/green-dot.png\" alt=\"green marker icon with dot\"/><label>Banner Available & Selected During Chosen Date Range</label></li>\n                <li><img src=\"https://maps.google.com/mapfiles/ms/icons/orange-dot.png\" alt=\"orange marker icon with dot\"/><label>Banner Un-Available & Selected During Chosen Date Range</label></li>            \n            </ul>\n          </div>\n          </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => ({\n    markers: state.markers.items,\n    selected_marker: state.markers.selected_marker,\n    loading: state.markers.loading,\n    error: state.markers.error\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSelect: (data) => dispatch(toggleSelect(data)),\n        setMarker: (data) => dispatch(setMarker(data))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React from \"react\";\nimport { connect } from \"react-redux\";\n\n\nclass SelectedMarker extends React.Component {\n\n  avail_dates() {\n    if(this.props.events[this.props.selected_marker]) return 'Reserved until ' + this.props.events[this.props.selected_marker].end\n    if(this.props.markers[this.props.selected_marker].avail) return 'Available now'\n  }\n\n  render() {\n    const { error, loading, markers, selected_marker } = this.props;\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n\n    if (selected_marker || selected_marker === 0) {\n      let pole_img = './inc/img/' + markers[selected_marker].img\n      return (\n        <div className=\"selected-marker\">\n          <img src={pole_img} alt=\"image of banner post\"></img>  \n          <div>\n            <h3>{markers[selected_marker].num} - {markers[selected_marker].name}</h3>      \n            <p>{this.avail_dates()}</p>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"selected-marker\"></div>\n    )\n  }\n}    \n\nconst mapStateToProps = state => ({\n    markers: state.markers.items,\n    loading: state.markers.loading,\n    error: state.markers.error,\n    selected_marker: state.markers.selected_marker,\n    events: state.events.items\n });\n\nexport default connect(mapStateToProps)(SelectedMarker);","import 'isomorphic-fetch'\n\nexport const SET_NAME = \"SET_NAME\"\n\nexport const setName = name => ({\n    type: SET_NAME,\n    name\n})\n\nexport const SET_EMAIL = \"SET_EMAIL\"\n\nexport const setEmail = email => ({\n    type: SET_EMAIL,\n    email\n})\n\nexport const SET_DEPARTMENT = \"SET_DEPARTMENT\"\n\nexport const setDepartment = dept => ({\n    type: SET_DEPARTMENT,\n    dept\n})\n\nexport const SET_ALT_NAME = \"SET_ALT_NAME\"\n\nexport const setAltName = alt_name => ({\n    type: SET_ALT_NAME,\n    alt_name\n})\n\nexport const SET_ALT_EMAIL = \"SET_ALT_EMAIL\"\n\nexport const setAltEmail = alt_email => ({\n    type: SET_ALT_EMAIL,\n    alt_email\n})\n\nexport const SET_ERROR = \"SET_ERROR\"\n\nexport const setError = error => ({\n    type: SET_ERROR,\n    error\n})\n\nexport const SET_RECAPTCHA = \"SET_RECAPTCHA\"\n\nexport const setRecaptcha = recaptcha => ({\n    type: SET_RECAPTCHA,\n    recaptcha\n})\n\n\n\n//https://javascript.info/promise-chaining\nfunction sendToBack(data) {\n    let url = 'https://publicaffairs.berkeley.edu/campus-banners/filled.php'\n\n    return fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify(data),\n        headers: { \"Content-Type\": \"application/json\" }\n    })\n    .then(resp => { \n        \n    })\n    .catch(error => console.log(error))\n}\n\nexport function postForm(rsvp) {\n    return dispatch => {\n        return sendToBack(rsvp, null)\n        .then(resp => {\n            dispatch(postFormSuccess(resp))\n        })\n        .catch(error => dispatch(postFormFailure(error)))\n    }\n}\n\nexport const POST_FORM_SUCCESS = \"POST_FORM_SUCCESS\"\nexport const POST_FORM_FAILURE = \"POST_FORM_FAILURE\"\n\nexport const postFormSuccess = response => ({\n    type: POST_FORM_SUCCESS,\n    payload: response\n})\n\nexport const postFormFailure = error => ({\n    type: POST_FORM_FAILURE,\n    payload: error\n})","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport { setName,\n         setEmail,\n         setDepartment,\n         setAltName,\n         setAltEmail,\n         setError,\n         setRecaptcha,\n         postForm } from \"./../actions/formAction\"\n\n/*\nname: undefined,\nemail: undefined,\ndepartment: undefined,\nalt_name: undefined,\nalt_email: undefined,\nitems: [],\nstart: undefined,\nend: undefined,\nerror: null,\nmailSent: false\n*/\n\nclass BannerForm extends React.Component {\n  \n  constructor() {\n    super()\n    this.state = {\n       nameErr: 'good',\n       emailErr: 'good',\n       deptErr: 'good',\n       altNameErr: 'good',\n       altEmailErr: 'good',\n       formErr: 'no-err',\n       noShow: false,\n     }\n  }\n\n  submitted = _ => {\n    if(this.props.success) {return 'Form submitted successfully. If you do not receive an email with your order within the next hour, please email campusbanners@berkeley.edu'}\n    if(this.props.error) {return 'Form submission was not successful. Please screenshot your order screen and email it to campusbanners@berkeley.edu'}\n  }\n\n  recap = (value) => {\n    if (value === null) { this.props.setRecaptcha(false) }\n    else this.props.setRecaptcha(true) \n  }\n\n  onNameBlur = (e) => {\n    if(e.target.value.length > 5) {\n      if(this.state.nameErr != 'good') this.setState({nameErr: 'good'})\n      this.props.setName(e.target.value)\n    } else {\n      if(this.state.nameErr != 'error') this.setState({nameErr: 'error'})\n    }   \n  }\n\n  onEmailBlur = (e) => {\n    if(e.target.value.length > 0 && e.target.value.toLowerCase().indexOf('@berkeley.edu') !== -1) {      \n      if(this.state.emailErr != 'good') this.setState({emailErr: 'good'})      \n      this.props.setEmail(e.target.value)\n    } else {\n      if(this.state.emailErr != 'error') this.setState({emailErr: 'error'})\n    }\n  }  \n\n  onDeptBlur = (e) => {\n    if(e.target.value.length > 5) {\n      if(this.state.deptErr != 'good') this.setState({deptErr: 'good'})      \n      this.props.setDepartment(e.target.value)\n    } else {\n      if(this.state.deptErr != 'error') this.setState({deptErr: 'error'})\n    }\n  }  \n\n  onAltNameBlur = (e) => {\n    if(e.target.value.length > 5) {\n      if(this.state.altNameErr != 'good') this.setState({altNameErr: 'good'})\n      this.props.setAltName(e.target.value)\n    } else {\n      if(this.state.altNameErr != 'error') this.setState({altNameErr: 'error'})\n    }   \n  }\n\n  onAltEmailBlur = (e) => {\n    if(e.target.value.length > 0 && e.target.value.toLowerCase().indexOf('@berkeley.edu') !== -1) {   \n      if(this.state.altEmailErr != 'good') this.setState({altEmailErr: 'good'})      \n      this.props.setAltEmail(e.target.value)\n    } else {\n      if(this.state.altEmailErr != 'error') this.setState({altEmailErr: 'error'})\n    }\n  }  \n\n  onNoShowBlur = (e) => {\n    if(e.target.value.length > 0) {\n      this.setState({noShow: true})\n    } else this.setState({noShow: false})\n  } \n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    let q = false\n    for(let[k, v] of Object.entries(this.state)) {\n      if(v == 'error') q = true\n    }\n\n    if(\n      this.props.name && \n      this.props.email &&\n      this.props.department && \n      this.props.alt_name && \n      this.props.alt_email &&\n      this.props.e_start &&\n      this.props.e_end &&\n      this.props.recaptcha &&\n      !q &&\n      !this.state.noShow \n    ) {\n      if(this.state.formErr != 'no-err') this.setState({formErr: 'no-err'}) \n\n      let sel_list = []\n      this.props.markers.forEach(marker=> { \n        if(marker.sel && marker.avail) {\n          let m = [marker.num + ' - ' + marker.name, marker.img]\n          sel_list.push(m) \n        }\n      })\n\n      let rsvp = [\n        this.props.name, \n        this.props.email, \n        this.props.department, \n        this.props.alt_name, \n        this.props.alt_email, \n        sel_list, \n        this.props.e_start, \n        this.props.e_end\n      ]\n      this.props.postForm(rsvp)\n    } else { \n      if(this.state.formErr != 'has-err') this.setState({formErr: 'has-err'})  \n    }\n  }\n\n  render() {\n    const { markers, start, end } = this.props;\n\n    return (\n        <form onSubmit={this.handleSubmit}>\n            <h2>Submission Form</h2>\n            <div className=\"error\">{this.props.error}</div>\n            <h3>Confirm this info is correct. If it is not, make new selections in the section above.</h3>\n\n            <div className=\"markers\">\n              <label>\n              Selected Markers:\n              <select size=\"10\">\n                  {this.props.markers.map(marker=> { if(marker.sel && marker.avail) return (<option value={marker.name} key={marker.id}>{marker.num} - {marker.name}</option>) })}\n              </select>\n              </label>\n            </div>\n\n            <div className=\"dates\">\n              <label>Start Date:</label><div className=\"date\">{this.props.e_start}</div>\n\n              <label>End Date:</label><div className=\"date\">{this.props.e_end}</div>\n            </div>\n\n            <p><span class=\"star\">*</span>All below fields required</p> \n            <div className=\"primary\">\n              <label className={this.state.nameErr}>\n              <span class=\"star\">*</span>Name:\n              <input onBlur={this.onNameBlur} />\n              <div className=\"notice\">Please input a full name, longer than 5 characters</div>\n              </label>\n\n              <label className={this.state.emailErr}>\n              <span class=\"star\">*</span>Email:\n              <input onBlur={this.onEmailBlur} />\n              <div className=\"notice\">Please input a valid bCal email address</div>\n              </label>\n\n              <label className={this.state.deptErr}>\n              <span class=\"star\">*</span>Department:\n              <input onBlur={this.onDeptBlur} />\n              <div className=\"notice\">Please input a department name, longer than 5 characters</div>\n              </label>\n            </div>\n\n            <div className=\"alternate\">\n              <label className={this.state.altNameErr}>\n              <span class=\"star\">*</span>Alternate Contact Name:\n              <input onBlur={this.onAltNameBlur} />\n              <div className=\"notice\">Please input a full name, longer than 5 characters</div>\n              </label>\n\n              <label className={this.state.altEmailErr}>\n              <span class=\"star\">*</span>Alternate Contact Email:\n              <input onBlur={this.onAltEmailBlur} />\n              <div className=\"notice\">Please input a valid bCal email address</div>\n              </label>\n\n              <label className=\"no-show\" aria-hidden=\"true\">\n              <input onBlur={this.onNoShowBlur} />\n              </label>\n            </div>\n\n            <div className=\"recap\">\n              <ReCAPTCHA\n                sitekey=\"6Le75cgUAAAAAG7na3_PrNAGnmvM0RkbQcnI0kWB\"\n                onChange={this.recap}\n              />\n            </div>\n\n            <div className={this.state.formErr}>Please fix errors in form, then re-submit</div>\n\n            <div className=\"submitted\">{this.submitted()}</div>\n          \n            <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n        </form>\n    )\n  }\n}    \n\nconst mapStateToProps = state => ({\n    markers: state.markers.items,\n    e_start: moment(state.events.start).format('MM/DD/YY'),\n    e_end: moment(state.events.end).format('MM/DD/YY'),\n\n    name: state.form.name,\n    email: state.form.email,\n    department: state.form.department,\n    alt_name: state.form.alt_name,\n    alt_email: state.form.alt_email,\n    recaptcha: state.form.recaptcha,\n    success: state.form.success,\n    error: state.form.error\n });\n\n const mapDispatchToProps = dispatch => {\n    return {\n        setName: (name) => dispatch(setName(name)),\n        setEmail: (email) => dispatch(setEmail(email)),\n        setDepartment: (dept) => dispatch(setDepartment(dept)),\n        setAltName: (name) => dispatch(setAltName(name)),\n        setAltEmail: (email) => dispatch(setAltEmail(email)),  \n        setError: (error) => dispatch(setError(error)), \n        setRecaptcha: (recaptcha) => dispatch(setRecaptcha(recaptcha)),     \n        postForm: (rsvp) => dispatch(postForm(rsvp))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerForm);","import React from \"react\";\n\n\nclass FormInfo extends React.Component {\n  render() {\n    return (\n        <div className=\"info\">\n            <h2>Information</h2>\n            <p>There is a two week processing time.</p>\n            <p>Email campusbanners@berkeley.edu for further questions.</p>\n      </div>\n    )\n  }\n}    \n\n\nexport default (FormInfo);","import update from 'immutability-helper';\nimport {\n    FETCH_MARKERS_BEGIN,\n    FETCH_MARKERS_SUCCESS,\n    FETCH_MARKERS_FAILURE,\n    TOGGLE_SELECTED_MARKER,\n    SET_MARKER_ICON,\n    SET_AVAILABLE_MARKER,\n  } from './../actions/markersAction';\n  \n  const initialState = {\n    items: [],\n    selected_marker: null,\n    loading: false,\n    error: null\n  };\n\n  export default function markerReducer(state = initialState, action) {\n    switch(action.type) {\n      case FETCH_MARKERS_BEGIN:\n        return {\n          ...state,\n          loading: true,\n          error: null\n        };\n  \n      case FETCH_MARKERS_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          items: action.payload.markers\n        };\n  \n      case FETCH_MARKERS_FAILURE:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error,\n          items: []\n        };\n\n      case TOGGLE_SELECTED_MARKER:\n        const { data } = action\n        return update(state, {\n          items: {\n            [data[0]]: {\n              sel: {$set: data[1]}\n            }\n          },\n          selected_marker : {$set: data[0]}\n        })\n\n      case SET_MARKER_ICON:\n        const { new_icon } = action\n        return update(state, {\n          items: {\n            [new_icon[0]]: {\n              icon: {$set: new_icon[1]}\n            }\n          }\n        })\n\n      case SET_AVAILABLE_MARKER:\n        const { marker_item } = action\n        return update(state, {\n          items: {\n            [marker_item[0]]: {\n              avail: {$set: marker_item[1]}\n            }\n          }\n        })\n\n      default:\n        // ALWAYS have a default case in a reducer\n        return state;\n    }\n  }\n  ","import update from 'immutability-helper';\nimport {\n    FETCH_EVENTS_BEGIN,\n    FETCH_EVENTS_SUCCESS,\n    FETCH_EVENTS_FAILURE,\n    SET_START_DATE,\n    SET_END_DATE\n  } from './../actions/eventsAction';\n  \n  const initialState = {\n    items: [],\n    start: null,\n    end: null,\n    loading: false,\n    error: null\n  };\n\n  export default function eventReducer(state = initialState, action) {\n    //console.log(action.type)\n    switch(action.type) {\n      case FETCH_EVENTS_BEGIN:\n        return {\n          ...state,\n          loading: true,\n          error: null\n        };\n  \n      case FETCH_EVENTS_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          items: action.payload.events\n        };\n  \n      case FETCH_EVENTS_FAILURE:\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error,\n          items: []\n        };\n        \n      case SET_START_DATE: \n        const { start_date } = action\n        return update(state, {\n          start : {$set: start_date }\n        })\n\n      case SET_END_DATE: \n        const { end_date } = action\n        return update(state, {\n          end : {$set: end_date }\n        })\n\n      default:\n        // ALWAYS have a default case in a reducer\n        return state;\n    }\n  }\n  ","import update from 'immutability-helper';\nimport {\n    SET_NAME,\n    SET_EMAIL,\n    SET_DEPARTMENT,\n    SET_ALT_NAME,\n    SET_ALT_EMAIL,\n    SET_ERROR,\n    SET_RECAPTCHA, \n    POST_FORM_SUCCESS,\n    POST_FORM_FAILURE  \n} from './../actions/formAction';\n  \nconst initialState = {\n    name: undefined,\n    email: undefined,\n    department: undefined,\n    alt_name: undefined,\n    alt_email: undefined,\n    items: [],\n    start: undefined,\n    end: undefined,\n    error: undefined,\n    success: undefined,\n    response: undefined,\n    recaptcha: undefined\n};\n\nexport default function formReducer(state = initialState, action) {\n    //console.log(action.type)\n    switch(action.type){\n        case SET_NAME:\n            return update(state, {name: {$set:action.name}})\n\n        case SET_EMAIL:\n            return update(state, {email: {$set:action.email}})\n\n        case SET_DEPARTMENT:\n            return update(state, {department: {$set:action.dept}})   \n            \n        case SET_ALT_NAME:\n            return update(state, {alt_name: {$set:action.alt_name}})\n\n        case SET_ALT_EMAIL:\n            return update(state, {alt_email: {$set:action.alt_email}})            \n\n        case SET_ERROR:\n            return update(state, {error: {$set:action.error}})   \n            \n        case SET_RECAPTCHA:\n            return update(state, {recaptcha: {$set:action.recaptcha}}) \n            \n        case POST_FORM_SUCCESS:\n            return update(state, {success: {$set:true}})\n\n        case POST_FORM_FAILURE:\n            return update(state, {error: {$set:true}})\n\n    default:\n        // ALWAYS have a default case in a reducer\n        return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport markers from \"./markersReducer\";\nimport events from \"./eventsReducer\";\nimport form from \"./formReducer\"\n\nexport default combineReducers({\n    markers,\n    events,\n    form\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MarkerList from \"./components/markers\";\nimport DateRange from \"./components/datePicker\"\nimport Map from \"./components/map\"\nimport SelectedMarker from \"./components/selected\"\nimport BannerForm from \"./components/form\"\nimport FormInfo from \"./components/formInfo\"\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nclass App extends React.Component {\n  render(){  \n    return (\n      <div className=\"App\">\n        <div className=\"left\">\n          <Provider store={store}><DateRange /></Provider>\n          <Provider store={store}><SelectedMarker /></Provider>\n          <Provider store={store}><MarkerList /></Provider>\n        </div>\n\n        <div className=\"right\" aria-label=\"map-section\" aria-hidden=\"true\">\n          <Provider store={store}><Map /></Provider>\n        </div>\n\n        <div className=\"bottom\">\n          <div className=\"container\">\n            <FormInfo />\n            <Provider store={store}><BannerForm /></Provider>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in markerion, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'markerion' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport './style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n   <App />, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}